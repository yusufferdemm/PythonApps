{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "adbe0050",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "([1, 'a', ['cat'], 2, [[3]], 'dog', 4, 5],\n",
       " [1, 'a', 'cat', 2, [3], 'dog', 4, 5],\n",
       " [1, 'a', 'cat', 2, 3, 'dog', 4, 5])"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def flatten_list(liste):\n",
    "    duz_liste=[]\n",
    "    duz_liste2=[]\n",
    "    duz_liste3=[]\n",
    "    \n",
    "\n",
    "    for i in liste:\n",
    "        if type(i) is list :\n",
    "            for x in i:\n",
    "                duz_liste.append(x)\n",
    "            \n",
    "                \n",
    "              \n",
    "\n",
    "        else:\n",
    "            duz_liste.append(i)\n",
    "        \n",
    "    for i in duz_liste:\n",
    "        if type(i) is list:\n",
    "            for x in i:\n",
    "                duz_liste2.append(x)\n",
    "        else:\n",
    "            duz_liste2.append(i)\n",
    "    \n",
    "    for i in duz_liste2:\n",
    "        if type(i) is list:\n",
    "            for x in i:\n",
    "                duz_liste3.append(x)\n",
    "        else:\n",
    "            duz_liste3.append(i)\n",
    "            \n",
    "    return duz_liste , duz_liste2 , duz_liste3\n",
    "    print(duz_liste)\n",
    "    print(duz_liste2)\n",
    "    print(duz_liste3)\n",
    "    \n",
    "\n",
    "\n",
    "a=[[1,'a',['cat'],2],[[[3]],'dog'],4,5]\n",
    "flatten_list(a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b8d9f4de",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.3"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": false,
   "sideBar": false,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
